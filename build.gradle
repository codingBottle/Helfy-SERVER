plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.codingbottle'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

allprojects {
    group = 'com.codingbottle'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

}

subprojects { subproject ->
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'application'
    apply plugin: 'distribution'
    apply plugin: 'org.springframework.boot'

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        implementation  'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation group: 'com.google.firebase', name: 'firebase-admin', version: '8.0.1'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'com.github.napstr:logback-discord-appender:1.0.0'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        runtimeOnly 'com.mysql:mysql-connector-j'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    plugins.withType(JavaPlugin) {
        java {
            sourceCompatibility = JavaVersion.VERSION_17
            targetCompatibility = JavaVersion.VERSION_17
        }

        compileJava {
            options.encoding = 'UTF-8'
        }

        idea {
            module {
                outputDir = file("$buildDir/classes/main/")
                testOutputDir = file("$buildDir/classes/test/")
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
