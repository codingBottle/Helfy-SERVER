dependencies {
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.h2database:h2'
}

test {
    useJUnitPlatform()
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        html.required.set(true)
        xml.required.set(true)
        csv.required.set(false)
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
    def QueryDslDomains = []
    for (qPattern in '**/QA'..'**/QZ') {
        QueryDslDomains.add(qPattern + '*')
    }
    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, excludes: [
                            "**/*Config*",
                            "**/*Exception*"
                    ] + QueryDslDomains)
                })
        )
    }
    finalizedBy jacocoTestCoverageVerification
}


